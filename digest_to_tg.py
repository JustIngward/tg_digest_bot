#!/usr/bin/env python3
import os, textwrap, datetime, requests
from openai import OpenAI          # –Ω–æ–≤–µ–Ω—å–∫–∏–π –∫–ª–∏–µ–Ω—Ç
from dotenv import load_dotenv

load_dotenv()                      # –ø–æ–¥—Ö–≤–∞—Ç—ã–≤–∞–µ–º .env
TZ = datetime.timezone(datetime.timedelta(hours=3))   # Moscow
MODEL = "o3"                       # o3 –∏–ª–∏ gpt‚Äë4o‚Äëmini

#def make_prompt() -> str:
 #   today = datetime.datetime.now(TZ).strftime("%d¬†%b¬†%Y")
  #  return (f"–°–¥–µ–ª–∞–π IT‚Äë–¥–∞–π–¥–∂–µ—Å—Ç –∑–∞ {today}: 5 –Ω–æ–≤–æ—Å—Ç–µ–π –∑–∞ 48¬†—á, "
   #         "–æ–±–∑–æ—Ä –º–∏—Ä–æ–≤–æ–≥–æ IT‚Äë—Ä—ã–Ω–∫–∞, —Ä–æ—Å—Å–∏–π—Å–∫–æ–≥–æ —Ä—ã–Ω–∫–∞ –∏ 1–°; –¥–æ–±–∞–≤—å —Å—Å—ã–ª–∫–∏ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –Ω–æ–≤–æ—Å—Ç–∏.")
def make_prompt() -> str:
    today = datetime.datetime.now(TZ).strftime("%d¬†%b¬†%Y")

    # –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–π —Ç–µ–∫—Å—Ç –±–µ–∑ –ª–∏—à–Ω–∏—Ö –æ—Ç—Å—Ç—É–ø–æ–≤
    return f"""
–¢—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π IT‚Äë–æ–±–æ–∑—Ä–µ–≤–∞—Ç–µ–ª—å. –°–æ—Å—Ç–∞–≤—å –¥–∞–π–¥–∂–µ—Å—Ç **—Å—Ç—Ä–æ–≥–æ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ**:

üóûÔ∏è IT‚ÄëDigest ‚Ä¢ {today}

üåç **–ì–õ–û–ë–ê–õ–¨–ù–´–ô¬†IT**
- *–ñ–∏—Ä–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø–µ—Ä–≤–æ–π –Ω–æ–≤–æ—Å—Ç–∏* ‚Äî 1‚Äë2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Å—É—Ç–∏ (‚â§¬†30¬†—Å–ª–æ–≤). [–ò—Å—Ç–æ—á–Ω–∏–∫]
- *–í—Ç–æ—Ä–∞—è –Ω–æ–≤–æ—Å—Ç—å* ‚Äî 1‚Äë2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è. [–ò—Å—Ç–æ—á–Ω–∏–∫]
- *–¢—Ä–µ—Ç—å—è –Ω–æ–≤–æ—Å—Ç—å (–µ—Å–ª–∏ –µ—Å—Ç—å)* ‚Äî 1‚Äë2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è. [–ò—Å—Ç–æ—á–Ω–∏–∫]

üá∑üá∫ **–†–û–°–°–ò–ô–°–ö–ò–ô¬†TECH**
- *–ü–µ—Ä–≤–∞—è –Ω–æ–≤–æ—Å—Ç—å* ‚Äî 1‚Äë2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è. [–ò—Å—Ç–æ—á–Ω–∏–∫]
- *–í—Ç–æ—Ä–∞—è –Ω–æ–≤–æ—Å—Ç—å* ‚Äî 1‚Äë2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è. [–ò—Å—Ç–æ—á–Ω–∏–∫]
- *–¢—Ä–µ—Ç—å—è –Ω–æ–≤–æ—Å—Ç—å (–µ—Å–ª–∏ –µ—Å—Ç—å)* ‚Äî 1‚Äë2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è. [–ò—Å—Ç–æ—á–Ω–∏–∫]

üü° **–≠–ö–û–°–ò–°–¢–ï–ú–ê¬†1–°**
- *–ü–µ—Ä–≤–∞—è –Ω–æ–≤–æ—Å—Ç—å* ‚Äî 1‚Äë2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è. [–ò—Å—Ç–æ—á–Ω–∏–∫]
- *–í—Ç–æ—Ä–∞—è –Ω–æ–≤–æ—Å—Ç—å (–µ—Å–ª–∏ –µ—Å—Ç—å)* ‚Äî 1‚Äë2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è. [–ò—Å—Ç–æ—á–Ω–∏–∫]

üí° **Insight:** –í 2‚Äë3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö –æ–±—ä—è—Å–Ω–∏, –ø–æ—á–µ–º—É —ç—Ç–∏ —Å–æ–±—ã—Ç–∏—è –≤–∞–∂–Ω—ã –¥–ª—è IT‚ÄëPM‚Äë–æ–≤.

–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∏ —Ñ–∏–ª—å—Ç—Ä—ã:
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ **48¬†—á–∞—Å–æ–≤**.  
‚Ä¢ –ò–≥–Ω–æ—Ä–∏—Ä—É–π —à—É—Ç–∫–∏ 1¬†–∞–ø—Ä–µ–ª—è, —Ä–µ–∫–ª–∞–º–Ω—ã–µ –∏–ª–∏ paywall‚Äë–∏—Å—Ç–æ—á–Ω–∏–∫–∏.  
‚Ä¢ –ù–µ –¥—É–±–ª–∏—Ä—É–π –Ω–æ–≤–æ—Å—Ç–∏ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –¥–≤—É—Ö —Å—É—Ç–æ–∫.  
‚Ä¢ –°—Å—ã–ª–∫—É —Å—Ç–∞–≤—å –≤ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö —Å–∫–æ–±–∫–∞—Ö Markdown‚Äë–æ–º —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –Ω–æ–≤–æ—Å—Ç–∏.  
‚Ä¢ –õ–∞–∫–æ–Ω–∏—á–Ω—ã–π, –ø–æ–ª—É‚Äë–¥–µ–ª–æ–≤–æ–π —Ç–æ–Ω; –¥–æ–ø—É—Å–∫–∞—é—Ç—Å—è —ç–º–æ–¥–∑–∏ —Ä–∞–∑–¥–µ–ª–æ–≤, –Ω–æ –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–º–∞–π–ª–æ–≤ –≤ —Ç–µ–∫—Å—Ç–µ.
"""


def fetch_digest() -> str:
    client = OpenAI()  # –∫–ª—é—á —á–∏—Ç–∞–µ—Ç—Å—è –∏–∑ OPENAI_API_KEY
    resp = client.responses.create(
        model = MODEL,
        tools = [{"type": "web_search"}],    # ‚Üê –¥–∞—ë—Ç –º–æ–¥–µ–ª–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç
        input = [{"role": "user", "content": make_prompt()}],
        store = False                        # –∏—Å—Ç–æ—Ä–∏—é –Ω–∞–º —Ö—Ä–∞–Ω–∏—Ç—å –Ω–µ –Ω—É–∂–Ω–æ
    )
    # —É Responses API –æ—Ç–≤–µ—Ç –≤ resp.output[0].content
    return resp.output_text.strip()

def send_to_telegram(text: str):
    url = f"https://api.telegram.org/bot{os.getenv('TG_TOKEN')}/sendMessage"
    for chunk in textwrap.wrap(text, 4096):   # Telegram –ª–∏–º–∏—Ç 4096 —Å–∏–º–≤–æ–ª–æ–≤
        requests.post(url, json={
            "chat_id": os.getenv("CHAT_ID"),
            "text": chunk,
            "parse_mode": "Markdown",
            "disable_web_page_preview": False
        })

if __name__ == "__main__":
    send_to_telegram(fetch_digest())
