#!/usr/bin/env python3
import os, textwrap, datetime, requests
from openai import OpenAI          # –Ω–æ–≤–µ–Ω—å–∫–∏–π –∫–ª–∏–µ–Ω—Ç
from dotenv import load_dotenv

load_dotenv()                      # –ø–æ–¥—Ö–≤–∞—Ç—ã–≤–∞–µ–º .env
TZ = datetime.timezone(datetime.timedelta(hours=3))   # Moscow
MODEL = "o3"                       # o3 –∏–ª–∏ gpt‚Äë4o‚Äëmini

def make_prompt() -> str:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–æ–º–ø—Ç‚Äë—à–∞–±–ª–æ–Ω –¥–ª—è –º–æ–¥–µ–ª–∏.
    –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç:
    ‚Ä¢ –¢–æ–ª—å–∫–æ –º–∞—Ç–µ—Ä–∏–∞–ª—ã ‚â§¬†48¬†—á   ‚Ä¢ –Ø–≤–Ω–∞—è –¥–∞—Ç–∞ —É –∫–∞–∂–¥–æ–π –Ω–æ–≤–æ—Å—Ç–∏   ‚Ä¢ –ß–∏—Ç–∞–µ–º—ã–π Markdown
    """
    today = datetime.datetime.now(TZ).strftime("%d¬†%b¬†%Y")

    return f"""
–¢—ã ‚Äî IT‚Äë–∞–Ω–∞–ª–∏—Ç–∏–∫. –°—Ñ–æ—Ä–º–∏—Ä—É–π –¥–∞–π–¥–∂–µ—Å—Ç –≤¬†—Å—Ç—Ä–æ–≥–æ–º —Ñ–æ—Ä–º–∞—Ç–µ Markdown –Ω–∏–∂–µ.
‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π –¢–û–õ–¨–ö–û –∏—Å—Ç–æ—á–Ω–∏–∫–∏, –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ –Ω–µ —Å—Ç–∞—Ä—à–µ 48¬†—á–∞—Å–æ–≤ –æ—Ç {today}.
–ï—Å–ª–∏ –∏—Å—Ç–æ—á–Ω–∏–∫ —Å—Ç–∞—Ä—à–µ ‚Äî –∑–∞–º–µ–Ω–∏ –µ–≥–æ. –î–∞—Ç—É –±–µ—Ä–∏ –∏–∑ —Å–∞–º–æ–π —Å—Ç–∞—Ç—å–∏ –∏–ª–∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö.
‚ö†Ô∏è –£–∫–∞–∂–∏ –¥–∞—Ç—É –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ (–î–î.–ú–ú) –ø–æ—Å–ª–µ —Å—Å—ã–ª–∫–∏, —á—Ç–æ–±—ã —è –º–æ–≥ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–µ–∂–µ—Å—Ç—å.

–§–æ—Ä–º–∞—Ç –≤—ã–¥–∞—á–∏ (—Å–æ—Ö—Ä–∞–Ω–∏ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –∏ –æ—Ç—Å—Ç—É–ø—ã):

üóûÔ∏è **IT‚ÄëDigest ‚Ä¢ {today}**

üåç **–ì–õ–û–ë–ê–õ–¨–ù–´–ô¬†IT**
- **–ö–æ—Ä–æ—Ç–∫–∏–π –∂–∏—Ä–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫** ‚Äî 1‚Äë2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Å—É—Ç–∏. [–ò—Å—Ç–æ—á–Ω–∏–∫](URL)¬†(DD.MM)
- ‚Ä¶

üá∑üá∫ **–†–û–°–°–ò–ô–°–ö–ò–ô¬†TECH**
- **–ñ–∏—Ä–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫** ‚Äî 1‚Äë2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è. [–ò—Å—Ç–æ—á–Ω–∏–∫](URL)¬†(DD.MM)
- ‚Ä¶

üü° **–≠–ö–û–°–ò–°–¢–ï–ú–ê¬†1–°**
- **–ñ–∏—Ä–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫** ‚Äî 1‚Äë2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è. [–ò—Å—Ç–æ—á–Ω–∏–∫](URL)¬†(DD.MM)

üí° **Insight:** 2‚Äë3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –ø–æ—á–µ–º—É —ç—Ç–∏ —Å–æ–±—ã—Ç–∏—è –≤–∞–∂–Ω—ã PM‚Äë–∞–º.

–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –ø–æ —Å—Ç–∏–ª—é:
‚Ä¢ –ö–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ –Ω–æ–≤–æ—Å—Ç–∏ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ; –º–µ–∂–¥—É —Å–µ–∫—Ü–∏—è–º–∏ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞.  
‚Ä¢ –ù–µ –¥–æ–±–∞–≤–ª—è–π –ª–∏—à–Ω–∏–µ —Å–º–∞–π–ª—ã; —Ä–∞–∑—Ä–µ—à–µ–Ω—ã —Ç–æ–ª—å–∫–æ üåç¬†üá∑üá∫¬†üü°¬†–≤ –Ω–∞–∑–≤–∞–Ω–∏—è—Ö —Å–µ–∫—Ü–∏–π.  
‚Ä¢ –õ–∏–º–∏—Ç ‚â§¬†30¬†—Å–ª–æ–≤ –Ω–∞ –Ω–æ–≤–æ—Å—Ç—å.  
"""


def fetch_digest() -> str:
    client = OpenAI()  # –∫–ª—é—á —á–∏—Ç–∞–µ—Ç—Å—è –∏–∑ OPENAI_API_KEY
    resp = client.responses.create(
        model = MODEL,
        tools = [{"type": "web_search"}],    # ‚Üê –¥–∞—ë—Ç –º–æ–¥–µ–ª–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç
        input = [{"role": "user", "content": make_prompt()}],
        store = False                        # –∏—Å—Ç–æ—Ä–∏—é –Ω–∞–º —Ö—Ä–∞–Ω–∏—Ç—å –Ω–µ –Ω—É–∂–Ω–æ
    )
    # —É Responses API –æ—Ç–≤–µ—Ç –≤ resp.output[0].content
    return resp.output_text.strip()

def send_to_telegram(text: str):
    url      = f"https://api.telegram.org/bot{os.getenv('TG_TOKEN')}/sendMessage"
    char_max = 4000                # –Ω–µ–º–Ω–æ–≥–æ –º–µ–Ω—å—à–µ –ª–∏–º–∏—Ç–∞ 4096

    for i in range(0, len(text), char_max):
        chunk = text[i:i+char_max]   # —Å—Ä–µ–∑ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—Å–µ \n
        requests.post(url, json={
            "chat_id": os.getenv("CHAT_ID"),
            "text": chunk,
            "parse_mode": "Markdown",
            "disable_web_page_preview": False
        })

if __name__ == "__main__":
    send_to_telegram(fetch_digest())
